{
    "command.magmaLoader.run": "execute MagmaLoader",
    "command.magmaLoader.openLoadingResult": "execute MagmaLoader and open the result",
    "command.magmaNotebook.createNewNotebook": "New Magma Notebook",
    "command.magma.executeInBackground": "Executes this Magma file in background",
    "config.enableAutoCompletion": "Enables auto completion (e.g. `if ... end if;`)",
    "config.enableHover": "Enables hover provider",
    "config.enableDefinition": "Enables definition provider",
    "config.useLastInlineCommentAsDoc": "Treats an inline comment `// ...` on the line immediately preceding a definition as documentation",
    "config.onChangeDelay": "A delay \\[ms\\] to load file having unsaved change",
    "config.functionCompletionType": "The completion type of function|procedure",
    "config.functionCompletionType.snippet": "as snippet (with suggestion, with tabstops)",
    "config.functionCompletionType.original": "as original method (no suggestion, no tabstops)",
    "config.functionCompletionType.none": "disable function completion",
    "config.warnsWhenRedefiningIntrinsic": "Show warnings when functions are re-defining some intrinsics",
    "config.paths": "`@...` patterns configuring path aliases of `load`/`@require` statement",
    "config.notebookSavesOutputs": "Whether notebook files include execution results",
    "config.notebookOutputResultMode": "Saving mode (`append` or `overwrite`) of execution results of Magma Calculator Notebook\n(You can specify the mode by `@append`, `@overwrite`)",
    "config.notebookDisablesVim": "Disables Vim keybinds on Magma Calculator Notebook\n\n(only works when [Vim Extension](https://marketplace.visualstudio.com/items?itemName=vscodevim.vim) is enabled)",
    "config.magmaPath": "An execution path of Magma.",
    "config.redirectsStderr": "Whether to include standard error outputs in Magma execution results.",
    "config.redirectsStderr.yes": "Outputs stderr to the same file as that of stdout.",
    "config.redirectsStderr.separately": "Outputs stderr to a file different from that of stdout.",
    "config.redirectsStderr.select": "Asks every time",
    "config.redirectsStderr.no": "Discards stderr output.",
    "message.DefinitionHandler.openFile": "Open file",
    "message.DefinitionHandler.notFound": "Files not found. pattern: {0}",
    "message.DefinitionHandler.loadingAtUntitledFile": "Save this file in order to use {0} statements",
    "message.DefinitionHandler.alreadyDefined": "The function {0} has already been defined as intrinsic. It is recommended to change the name.",
    "message.DefinitionHandler.invalidFunctionType": "{0} is invalid.\nOnly function, procedure, and intrinsic are available.",
    "message.DefinitionHandler.functionTypeUndefined": "You need to add function, procedure, or intrinsic.",
    "message.DefinitionHandler.missingArguments": "You need to add arguments",
    "message.DefinitionHandler.matchedFiles": "Matched files:",
    "message.DefinitionHandler.cellNotFound": "The index {0} cell was not found.",
    "message.DefinitionHandler.cellSelfReference": "A cell cannot refer itself.",
    "message.DefinitionHandler.cellBackReference": "A cell cannot refer cells behind than itself.",
    "message.FileHandler.failedToReadFile": "Failed to read the file {0}",
    "message.Loader.notFound": "The file {0} was not found.",
    "message.Loader.tooManyFiles": "Too many files found: {0} (number: {1})",
    "message.Loader.circularReference": "A circular reference occurred. (Reloading {0})",
    "message.Loader.activeTextEditorUndefined": "Execute this command after opening a magma file.",
    "message.Loader.unsavedFile": "Execute this command on a saved file.",
    "message.Loader.nonMagmaFile": "The opened file is not a Magma file.",
    "message.Loader.running": "running MagmaLoader...",
    "message.Loader.failed": "Failed to execute MagmaLoader.",
    "message.Notebook.calledImmediately": "It has not been long enough since you executed codes frequently.\nPlease re-run this code after {0} minutes.",
    "message.Notebook.timeout": "Error: This execution has been timed out.",
    "message.Notebook.failedParsing": "Error: An error occurred during parsing",
    "message.Notebook.blocked": "Error: You executed codes too frequently.\nPlease wait for about {0} minutes",
    "message.Notebook.otherErrors": "Error: {0}",
    "message.Notebook.loadingAtUntitledFile": "You cannot load files at the unsaved file.",
    "message.Notebook.selectRemovingOutputs": "Please select the indices of the outputs to be removed.",
    "message.Notebook.buttonRemovingOutputs": "Remove the Outputs",
    "message.DisableVim.suggestsReloading": "Window reloading is recommended to change the configuration notebookDisablesVim successfully.",
    "message.DisableVim.reload": "Reload the window",
    "message.Completion.append": "Appends execution results, not deletes previous results.",
    "message.Completion.overwrite": "Overwrites execution results.",
    "message.Completion.use": "Joins previous cell to the current cell. The index of the previous cell must be specified.\n\nexample:\n```\n// @use 1\n```",
    "message.Completion.defined": "This function is assumed to be defined explicitly.\n\nThis is useful when writing documentation for Magma's built-in functions.\n\nexample:\n```\n/**\n *  Returns whether the \n *  integer n is a prime.\n *  see the [handbook](the url)\n */\n// @defined intrinsic IsPrime(n);\n```",
    "message.Completion.require": "This file requires that the files of specified glob pattern has been preloaded.\n\nEven if the `load` statement is not included in the file, it is possible to jump definitions, etc. in this file.",
    "message.Completion.export": "This file is assumed to be read in all files of the specified glob pattern.\n\nEven if `@require` statement is not included in each of the files of the pattern, it is possible to jump definition, etc. in the files.",
    "message.Completion.param": "Specifies a param or an argument of this function and its information.\n\nexample:\n```\n/**\n *  @param x The x coordinate\n *  @param {RngIntElt} idx The index\n */\n```",
    "message.Completion.paramAlias": "(same as `@param`)",
    "message.Completion.returns": "Specifies information of the return value.",
    "message.Completion.example": "Specifies usage of this function.",
    "message.Completion.remarks": "Specifies remarks.",
    "message.Execute.notConfiguredMagmaPath": "The configuration magmaPath is not set.",
    "message.Execute.notFoundMagmaPath": "The Magma executable file was not found.",
    "message.Execute.MagmaPathIsNotFile": "The magmaPath is not file.",
    "message.Execute.goToSettings": "Go to settings",
    "message.Execute.InputBoxPlaceHolder": "file name",
    "message.Execute.InputBoxPrompt": "Destination of execution results",
    "message.Execute.RedirectTypePrompt": "Do you want to save the stderr output?",
    "message.Execute.InputBoxStderrPrompt": "Destination of stderr output",
    "message.Execute.fileOpenError": "Failed to open the output file",
    "message.Execute.processError": "Failed to start a process.",
    "message.Execute.executionError": "Failed to execute magma."
}