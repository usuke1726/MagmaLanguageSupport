{
    "command.magmaLoader.run": "execute MagmaLoader",
    "command.magmaLoader.openLoadingResult": "execute MagmaLoader and open the result",
    "command.magmaNotebook.createNewNotebook": "New Magma Notebook",
    "command.magmaNotebook.export": "Export this notebook contents",
    "command.magmaNotebook.openLoadingResult": "Preview the execution contents",
    "command.magma.wrapWithStatement": "Wraps the selected lines with if statements, etc.",
    "command.magma.executeInBackground": "Execute this Magma file in background",
    "config.enableAutoCompletion": "Enables auto completion (e.g. `if ... end if;`)",
    "config.enableAutoCompletion.deprecated": "This setting has been integrated into completionTypes.",
    "config.completionTypes": "Type of completion (whether completion is enabled and whether suggestion is enabled)",
    "config.completionTypes.original": "as original method (no suggestion)",
    "config.completionTypes.snippet": "as snippet (with suggestion)",
    "config.completionTypes.snippet-space": "as snippet (with suggestion, enables auto completion by pressing space key)",
    "config.completionTypes.disabled": "disables the completion",
    "config.intrinsicCompletionAliases": "Aliases of intrinsics for completions",
    "config.priorityCompletionItems": "Names of the items to be suggested as a priority\n\n- These names target all of intrinsics, functions and variables.\n- Use `@functions`/`@variables` to give priority to all user-defined function/variables.",
    "config.priorityCompletionItems.functions": "suggests all user-defined functions as a priority",
    "config.priorityCompletionItems.variables": "suggests all variables as a priority",
    "config.enableHover": "Enables hover provider",
    "config.enableDefinition": "Enables definition provider",
    "config.useLastInlineCommentAsDoc": "Treats an inline comment `// ...` on the line immediately preceding a definition as documentation",
    "config.useLastInlineCommentAsDoc.tripleSlash": "Only `/// ...` is available as documentation",
    "config.onChangeDelay": "A delay \\[ms\\] to load file having unsaved change",
    "config.functionCompletionType": "The completion type of function|procedure",
    "config.functionCompletionType.deprecated": "This setting has been integrated into completionTypes.",
    "config.functionCompletionType.snippet": "as snippet (with suggestion, with tabstops)",
    "config.functionCompletionType.original": "as original method (no suggestion, no tabstops)",
    "config.functionCompletionType.none": "disable function completion",
    "config.warnsWhenRedefiningIntrinsic": "Show warnings when functions are re-defining some intrinsics",
    "config.paths": "`@...` patterns configuring path aliases of `load`/`@require` statement",
    "config.trustedPaths": "Absolute paths where files will be allowed to be read. (Files on a current workspace are always trusted regardless of this config.)",
    "config.trustDirectoriesOfOpenFiles": "Allows reading files on base directories of open files in editor. For example, when `/A/B/C.magma` is open, `/A/B/D.magma` and `/A/B/E/F.magma` are allowed to be read and `/A/G.magma` is not.\n\nNote that when this is disabled, open files themselves will also be untrusted by default.",
    "config.trustAllFiles": "Allows reading all files. If you set this to `true`, be careful not to send your private information to Magma Calculator.",
    "config.notebookSavesOutputs": "Whether notebook files include execution results",
    "config.notebookOutputResultMode": "Saving mode (`append` or `overwrite`) of execution results of Magma Calculator Notebook\n(You can specify the mode by `@append`, `@overwrite`)",
    "config.notebookDisablesVim": "Disables Vim keybinds on Magma Calculator Notebook\n\n(only works when [Vim Extension](https://marketplace.visualstudio.com/items?itemName=vscodevim.vim) is enabled)",
    "config.notebookSeparatesWithHorizontalLines": "Separate cells with horizontal lines when exporting notebooks to markdown",
    "config.useHttps": "Sends an https request on Magma Calculator Notebook\n\n(use this configuration when an https request fails due to an expired SSL certificate or something)",
    "config.magmaPath": "An execution path of Magma.",
    "config.redirectsStderr": "Whether to include standard error outputs in Magma execution results.",
    "config.redirectsStderr.yes": "Outputs stderr to the same file as that of stdout.",
    "config.redirectsStderr.separately": "Outputs stderr to a file different from that of stdout.",
    "config.redirectsStderr.select": "Asks every time",
    "config.redirectsStderr.no": "Discards stderr output.",
    "config.useMath": "Supports math rendering in documentation. (using MathJax)",
    "config.mathRenderingType": "The type of math rendering.",
    "config.mathRenderingType.fetch.mathAPI": "Uses `https://math.vercel.app` (repo: https://github.com/uetchy/math-api ).",
    "config.mathRenderingType.fetch.TeXSVGWorker": "Uses `https://tex.jacob.workers.dev` (repo: https://github.com/JacobLinCool/TeX-SVG-Worker ).",
    "config.mathRenderingType.embedding": "Renders on this extension and documentation includes maths as embedded Base64 links.",
    "message.DefinitionHandler.AlternativeHoverDocumentationOfArguments": "a param",
    "message.DefinitionHandler.openFile": "Open file",
    "message.DefinitionHandler.notFound": "Files not found. pattern: {0}",
    "message.DefinitionHandler.loadingAtUntitledFile": "Save this file in order to use {0} statements with relative paths",
    "message.DefinitionHandler.alreadyDefined": "The function {0} has already been defined as intrinsic. It is recommended to change the name.",
    "message.DefinitionHandler.invalidFunctionType": "{0} is invalid.\nOnly function, procedure, and intrinsic are available.",
    "message.DefinitionHandler.functionTypeUndefined": "You need to add function, procedure, or intrinsic.",
    "message.DefinitionHandler.missingArguments": "You need to add arguments.",
    "message.DefinitionHandler.unneededArguments": "Arguments are not needed.",
    "message.DefinitionHandler.matchedFiles": "Matched files:",
    "message.DefinitionHandler.cellNotFound": "The index {0} cell was not found.",
    "message.DefinitionHandler.cellSelfReference": "A cell cannot refer itself.",
    "message.FileHandler.untrustedFile": "The file {0} is not allowed to be read. If you trust this file, change the config MagmaLanguageSupport.trustedPaths.",
    "message.FileHandler.openTrustedFilesSetting": "Open Settings",
    "message.FileHandler.failedToReadFile": "Failed to read the file {0}",
    "message.FileHandler.relativePathFromUnsavedFile": "A load statement with relative path is unavailable in an unsaved file. (detected unavailable path: {0})",
    "message.Loader.notFound": "The file {0} was not found.",
    "message.Loader.tooManyFiles": "Too many files found: {0} (number: {1})",
    "message.Loader.circularReference": "A circular reference occurred. (Reloading {0})",
    "message.Loader.activeTextEditorUndefined": "Execute this command after opening a magma file.",
    "message.Loader.unsavedFile": "Execute this command on a saved file.",
    "message.Loader.nonMagmaFile": "The opened file is not a Magma file.",
    "message.Loader.running": "running MagmaLoader...",
    "message.Loader.failed": "Failed to execute MagmaLoader.",
    "message.Notebook.deserializationError": "Invalid file format",
    "message.Notebook.calledImmediately": "It has not been long enough since you executed codes frequently.\nPlease re-run this code after {0} minutes.",
    "message.Notebook.requestError": "Error: An error occurred while sending the request.",
    "message.Notebook.timeout": "Error: This execution has been timed out.",
    "message.Notebook.failedParsing": "Error: An error occurred during parsing",
    "message.Notebook.blocked": "Error: You executed codes too frequently.\nPlease wait for about {0} minutes",
    "message.Notebook.otherErrors": "Error: {0}",
    "message.Notebook.loadingAtUntitledFile": "You cannot load files at the unsaved file.",
    "message.Notebook.circularReference": "A circular reference occurred. (at \"use {0}\" from cell {1})",
    "message.Notebook.cellNotFound": "The cell {0} was not found.",
    "message.Notebook.selectRemovingOutputs": "Please select the indices of the outputs to be removed.",
    "message.Notebook.buttonRemovingOutputs": "Remove the Outputs",
    "message.Notebook.calledOnNonMagmaNotebookFile": "This command is only available on Magma notebooks.",
    "message.DisableVim.suggestsReloading": "Window reloading is recommended to change the configuration notebookDisablesVim successfully.",
    "message.DisableVim.reload": "Reload the window",
    "message.Completion.append": "Appends execution results, not deletes previous results.",
    "message.Completion.overwrite": "Overwrites execution results.",
    "message.Completion.use": "Joins previous cell to the current cell. The index of the previous cell must be specified.\n\nexample:\n```\n// @use 1\n```",
    "message.Completion.cellID": "Specifies the ID string of this cell. The ID can be used in `@use` statements.\n\nThere must be no statements above this line in this cell code other than inline comments.",
    "message.Completion.defined": "This function is assumed to be defined explicitly.\n\nThis is useful when writing documentation for Magma's built-in functions.\n\nexample:\n```\n/**\n *  Returns whether the \n *  integer n is a prime.\n *  see the [handbook](the url)\n */\n// @defined intrinsic IsPrime(n);\n```",
    "message.Completion.ignore": "Specifies the type to disable external references. For example,\n```\n// @ignore functions, forwards;\n```\ndisables external references to all functions and `forward` statements defined after it.",
    "message.Completion.require": "This file requires that the files of specified glob pattern has been preloaded.\n\nEven if the `load` statement is not included in the file, it is possible to jump definitions, etc. in this file.",
    "message.Completion.export": "This file is assumed to be read in all files of the specified glob pattern.\n\nEven if `@require` statement is not included in each of the files of the pattern, it is possible to jump definition, etc. in the files.",
    "message.Completion.param": "Specifies a param or an argument of this function and its information.\n\nexample:\n```\n/**\n *  @param x The x coordinate\n *  @param {RngIntElt} idx The index\n */\n```",
    "message.Completion.paramAlias": "(same as `@param`)",
    "message.Completion.returns": "Specifies information of the return value.",
    "message.Completion.example": "Specifies usage of this function.",
    "message.Completion.remarks": "Specifies remarks.",
    "message.Completion.internal": "Disables external references to this definition. This definition should only be used within this file. If the following line is empty, all definitions below it are also treated as internal.",
    "message.Completion.external": "Enables external references to this definition. If the following line is empty, all definition below it are also treated as external.",
    "message.Completion.priority": "This definition will be suggested as a priority.",
    "message.Completion.notebookStyleTag.all": "Insert a set of styleTags.",
    "message.Completion.notebookStyleTag.preset": "Insert preset styleTag. (its style will be applied to all of tags whose className is \"p-*\")",
    "message.Completion.notebookStyleTag.body": "Insert body styleTag. (its style will be applied to the body tag)",
    "message.Completion.notebookStyleTag.markup": "Insert markup styleTag. (its style will be applied to all of markup cells)",
    "message.Completion.notebookStyleTag.code": "Insert code styleTag. (its style will be applied to all of code cells)",
    "message.Completion.notebookStyleTag.output": "Insert output styleTag. (its style will be applied to all of output blocks in code cells)",
    "message.Completion.notebookStyleTag.math": "Insert math styleTag. (its style will be applied to all of inline math and block math)",
    "message.Completion.notebookStyleTag.math_block": "Insert math_block styleTag. (its style will be applied to all of block math)",
    "message.Completion.notebookStyleTag.dummy": "Insert the dummy tag. The contents of this tag will not be displayed when the file is viewed as HTML in a browser.",
    "message.Execute.notConfiguredMagmaPath": "The configuration magmaPath is not set.",
    "message.Execute.notFoundMagmaPath": "The Magma executable file was not found.",
    "message.Execute.MagmaPathIsNotFile": "The magmaPath is not file.",
    "message.Execute.goToSettings": "Go to settings",
    "message.Execute.InputBoxPlaceHolder": "file name",
    "message.Execute.InputBoxPrompt": "Destination of execution results",
    "message.Execute.RedirectTypePrompt": "Do you want to save the stderr output?",
    "message.Execute.InputBoxStderrPrompt": "Destination of stderr output",
    "message.Execute.fileOpenError": "Failed to open the output file",
    "message.Execute.processError": "Failed to start a process.",
    "message.Execute.executionError": "Failed to execute magma."
}